parameters:
  name: ''
  vmImage: ''
  matrix: []

jobs:
- job: ${{ parameters.name }}
  timeoutInMinutes: 120
  pool:
    vmIMage: ${{ parameters.vmImage }}
  variables:
    AZURE_CI_WINDOWS: 'true'
    DEPENDS: "cython numpy matplotlib h5py nibabel cvxpy tqdm"
    VENV_ARGS: "--python=python"
    INSTALL_TYPE: "setup"
    PRE_WHEELS: "https://pypi.anaconda.org/scipy-wheels-nightly/simple"
  strategy:
    # maxParallel: 3
    matrix:
      ${{ insert }}: ${{ parameters.matrix }}
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: $(python.version)
      architecture: 'x64'
      addToPath: true
  - powershell: |
      Write-Host "##vso[task.prependpath]$env:CONDA\Scripts"
    displayName: Add Conda to PATH
    condition: eq( variables['INSTALL_TYPE'], 'conda' )
  - powershell: |
      Set-StrictMode -Version Latest
      $ErrorActionPreference = "Stop"
      $PSDefaultParameterValues['*:ErrorAction']='Stop'
      powershell ./ci/azure/install_opengl.ps1
    displayName: 'Install OpenGL'
    condition: eq( variables['TEST_WITH_XVFB'], '1' )
  - powershell: |
      Invoke-WebRequest -Uri https://zenodo.org/record/2651349/files/gs.trk -UseDefaultCredentials
      Invoke-WebRequest -Uri https://stacks.stanford.edu/file/druid:yx282xq2090/label_info.txt -UseDefaultCredentials
    displayName: Add/Verify whether the certificate has been installed correctly
  - powershell: |
      Set-StrictMode -Version Latest
      $ErrorActionPreference = "Stop"
      $PSDefaultParameterValues['*:ErrorAction']='Stop'
      ./ci/azure/install.ps1
    displayName: 'Install dependencies'
  - powershell: |
      ./ci/azure/script.ps1
    displayName: 'Run Tests'
