# vim ft=yaml
# travis-ci.org definition for nipy build
#
# We pretend to be erlang because we need can't use the python support in
# travis-ci; it uses virtualenvs, they do not have numpy, scipy, matplotlib,
# and it is impractical to build them
language: erlang
env:
    # Enable python 2 and python 3 builds. Python3 available in Ubuntu 12.04.
    - PYTHON=python PYSUF=''
    - PYTHON=python3 PYSUF=3
install:
   # Add takluyver's python3 matplotlib PPA:
    - sudo add-apt-repository -y ppa:takluyver/python3
    - sudo apt-get update
    - sudo apt-get install $PYTHON-dev
    - sudo apt-get install $PYTHON-numpy
    - sudo apt-get install $PYTHON-scipy
    - sudo apt-get install $PYTHON-setuptools
    - sudo apt-get install $PYTHON-nose
    - sudo apt-get install $PYTHON-matplotlib
    - sudo easy_install$PYSUF nibabel # Latest pypi
    # Cython easy_install breaks with error about refnanny.c; maybe something
    # to do with having a previous cython version;
    # http://mail.python.org/pipermail//cython-devel/2012-April/002344.html
    - curl -O http://cython.org/release/Cython-0.18.zip
    - unzip Cython-0.18.zip
    - cd Cython-0.18
    - sudo python$PYSUF setup.py install
    # Temporary solution to travis issue #155
    # https://github.com/travis-ci/travis-cookbooks/issues/155
    - sudo rm -rf /dev/shm && sudo ln -s /run/shm /dev/shm
    - cd ..
    - if [ "${PYTHON}" == "python3" ]; then
            sudo apt-get install libblas-dev liblapack-dev ;
            sudo apt-get install python3-setuptools ;
            sudo easy_install3 pip ;
            sudo pip install cvxopt ;
       else
            sudo apt-get install python-cvxopt ;
            sudo pip install coverage ;
       fi
       # Dipy
    - $PYTHON setup.py build
    - sudo $PYTHON setup.py install
script:
    # Change into an innocuous directory and find tests from installation
    - mkdir for_test
    - cd for_test
    - if [ "${PYTHON}" == "python3" ]; then
        nosetests$PYSUF --with-doctest `$PYTHON -c "import os; import dipy; print(os.path.dirname(dipy.__file__))"`	;
      else
        cp ../.coveragerc . ;
        nosetests$PYSUF --with-doctest --with-coverage --verbose `$PYTHON -c "import os; import dipy; print(os.path.dirname(dipy.__file__))"` ;
      fi
