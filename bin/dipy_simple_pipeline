#! /usr/bin/env python
import os
from glob import glob

from dipy.workflows.segment import median_otsu_flow
from dipy.workflows.denoise import nlmeans_flow
from dipy.workflows.reconst import compute_dti_metrics
from dipy.workflows.fodf import compute_fodf
from dipy.workflows.tracking import deterministic_tracking_flow
from dipy.workflows.tract_metrics import tract_density
from dipy.workflows.utils import all_files_exist
from dipy.fixes import argparse as arg

parser = arg.ArgumentParser()
parser.add_argument('input', action='store')

parser.add_argument('bvals', action='store', metavar='bvals',
                    help='Path of the bvals file, in FSL format.')

parser.add_argument('bvecs', action='store', metavar='bvecs',
                    help='Path of the bvecs file, in FSL format.')

parser.add_argument('--continue', action='store', metavar='bvecs',
                    help='Path of the bvecs file, in FSL format.')

parser.add_argument('--resume', dest='resume', action='store_true')
parser.set_defaults(resume=False)

if __name__ == "__main__":
    params = parser.parse_args()
    input_dir = os.path.dirname(params.input)
    fname, ext = os.path.splitext(os.path.basename(params.input))

    if fname.endswith('.nii'):
        fname, _ = os.path.splitext(fname)
        ext = '.nii.gz'

    work_dir = os.path.join(input_dir, 'work')

    denoised_dwi = os.path.join(work_dir, 'dwi_2x2x2_nlmeans.nii.gz')

    if not params.resume or not all_files_exist(denoised_dwi):
        print 'path does not exists {0}'.format(denoised_dwi)
        nlmeans_flow(params.input, out_dir='work')

    mask_fname = fname + '_nlmeans_mask' + ext
    mask_path = os.path.join(work_dir, mask_fname)

    if not params.resume or not all_files_exist(mask_path):
        median_otsu_flow(denoised_dwi, '', 'True', '4', '4')

    metrics_dir = os.path.join(work_dir, 'metrics')
    fa_path = os.path.join(metrics_dir, 'fa.nii.gz')
    if not params.resume or not all_files_exist(fa_path):
        compute_dti_metrics(denoised_dwi, mask_path, params.bvals, params.bvecs,
                            'metrics/', 'tensor.nii.gz', 'fa.nii.gz', 'ga.nii.gz',
                            'rgb.nii.gz', 'md.nii.gz', 'ad.nii.gz', 'rd.nii.gz',
                            'mode.nii.gz', 'tensor_evecs.nii.gz',
                            'tensor_evals.nii.gz')

    fodf_path = os.path.join(metrics_dir, 'fodf.nii.gz')
    if not params.resume or not all_files_exist(fodf_path):
        compute_fodf(denoised_dwi, mask_path, params.bvals, params.bvecs,
                     'metrics/')

    tractogram_path = os.path.join(metrics_dir, 'tractogram.trk')
    if not params.resume or not all_files_exist(tractogram_path):
        deterministic_tracking_flow(denoised_dwi, mask_path, params.bvals,
                                params.bvecs, 'metrics/')

    tract_density(os.path.join(metrics_dir, 'tractogram.trk'),
                  os.path.join(metrics_dir, 'fa.nii.gz'))
